[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Code snippets",
    "section": "",
    "text": "Basic R code snippets for reference.\n\n\nBasics\n\n\n\nDirectory navigation\nLoading packages\nif statements\n\n\nLoops\nFunctions\nRegEx\n\n\nPrinting strings\nData structures\n\n\n\n\n\n\nData structures\n(Data structures in more depth?)\n\n\nTidyverse\n\n\n\nData manipulation with dplyr\n\n\n\n\n\n\n\nVisualistion\n\n\n\nggplot2\n\n\n\n\n\n\n\nNew section\n\n\n\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "basics/if_statements.html",
    "href": "basics/if_statements.html",
    "title": "If statements",
    "section": "",
    "text": "a &lt;- 1  \nb &lt;- 2\n\nif (a &gt; b) {\n    print(\"a &gt; b\")\n} else if (a == b) {\n    print (\"a = b\")\n} else {\n    print(\"a &lt; b\")\n}\n\n[1] \"a &lt; b\"\n\n\nRelational and logical operators:\n\n\n\n!=\nNot equal to\n\n\n&\nAND\n\n\n|\nOR\n\n\n!\nNOT\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "basics/data_structures.html",
    "href": "basics/data_structures.html",
    "title": "Data structures",
    "section": "",
    "text": "An overview of R data structures."
  },
  {
    "objectID": "basics/data_structures.html#indexing-vectors",
    "href": "basics/data_structures.html#indexing-vectors",
    "title": "Data structures",
    "section": "Indexing vectors",
    "text": "Indexing vectors\n\nmy_vec[1]\n\n[1] 1\n\nmy_vec[1:3]\n\n[1] 1 2 3\n\nmy_vec[1:length(my_vec)]\n\n[1] 1 2 3 4\n\nmy_vec[c(1,3,4)] # Select specific indicies\n\n[1] 1 3 4"
  },
  {
    "objectID": "basics/data_structures.html#assigning-names",
    "href": "basics/data_structures.html#assigning-names",
    "title": "Data structures",
    "section": "Assigning names",
    "text": "Assigning names\n\nnames(my_vec) &lt;- c('head_1', 'head_2', 'head_3', 'head_4')\nmy_vec\n\nhead_1 head_2 head_3 head_4 \n     1      2      3      4 \n\nmy_vec['head_1']\n\nhead_1 \n     1"
  },
  {
    "objectID": "basics/data_structures.html#indexing-dfs",
    "href": "basics/data_structures.html#indexing-dfs",
    "title": "Data structures",
    "section": "Indexing dfs",
    "text": "Indexing dfs\n\nmy_df$col1\n\n[1] 1 2 2\n\nmy_df[1:2, 'col1']\n\n[1] 1 2\n\nmy_df[1:nrow(my_df), c('col1','col3')]\n\n  col1 col3\n1    1    5\n2    2    6\n3    2    6\n\nmy_df[1:2, ] # All columns\n\n  col1 col2 col3\n1    1    3    5\n2    2    4    6\n\nsubset(my_df, col2&gt;3) # Select rows based on condition\n\n  col1 col2 col3\n2    2    4    6\n3    2    4    6"
  },
  {
    "objectID": "basics/data_structures.html#indexing-lists",
    "href": "basics/data_structures.html#indexing-lists",
    "title": "Data structures",
    "section": "Indexing lists",
    "text": "Indexing lists\nVarious ways to select all elements in first item of the list:\n\nmy_list[[1]] # Or my_list[['item1']], or my_list$item1\n\nhead_1 head_2 head_3 head_4 \n     1      2      3      4 \n\n\nSelect elements within list items:\n\nmy_list[[2]][1]\n\n  col1\n1    1\n2    2\n3    2\n\nmy_list[[2]]$col1\n\n[1] 1 2 2\n\nmy_list[[2]][1:2, 'col1'] # etc\n\n[1] 1 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Reference R code snippets built up while learning R. Might also add some Python in future.\n\n\n\n Back to top"
  },
  {
    "objectID": "basics/dir_navigation.html",
    "href": "basics/dir_navigation.html",
    "title": "Directory navigation",
    "section": "",
    "text": "getwd()\n\n[1] \"D:/MY FILES/Projects/Public/code-snippets/basics\"\n\n\nSetting the working directory\n\nsetwd(\"..\") # Move up dir tree\nsetwd(\"basics\") # Set WD in tree\ngetwd()\n\n[1] \"D:/MY FILES/Projects/Public/code-snippets/basics\"\n\n\n\ndir() # List contents\n\n[1] \"data_structures.html\"     \"data_structures.qmd\"     \n[3] \"dir_navigation.qmd\"       \"dir_navigation.rmarkdown\"\n[5] \"if_statements.qmd\"        \"loops.qmd\"               \n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "basics/loops.html",
    "href": "basics/loops.html",
    "title": "Loops",
    "section": "",
    "text": "next - move onto next iteration break - exit from loop Ctrl + C - abort execution\nIf you don’t need an iterative counter, this is the simplest for loop contruction:\n\ncities &lt;- c(\"NY\", \"London\", \"Cape Town\", \"Beijing\", \"Sydney\", \"Rio de Janeiro\")\n\nfor (city in cities) {\n    print(city)\n}\n\n[1] \"NY\"\n[1] \"London\"\n[1] \"Cape Town\"\n[1] \"Beijing\"\n[1] \"Sydney\"\n[1] \"Rio de Janeiro\"\n\n\nIf you need an iterative counter:\n\nmy_cities &lt;- c()\n\nfor (i in seq_along(cities)) { \n    city &lt;- cities[i]\n\n    if (nchar(city) == 6) {\n        next # Skip the loop iterations for London and Sydney\n    }\n    print(paste0(\"Iteration \", i, \": \", city))\n    my_cities[i] &lt;- city\n}\n\n[1] \"Iteration 1: NY\"\n[1] \"Iteration 3: Cape Town\"\n[1] \"Iteration 4: Beijing\"\n[1] \"Iteration 6: Rio de Janeiro\"\n\n\n\n\nBuild a dataframe in a for loop:\n\n# Define an empty df\ndf &lt;- data.frame(col1 = numeric(), col2 = character(), stringsAsFactors=FALSE)\n\nfor(i in seq_along(cities)) {\n    df[i, ] &lt;- c(i, cities[i])\n}\n\ndf\n\n  col1           col2\n1    1             NY\n2    2         London\n3    3      Cape Town\n4    4        Beijing\n5    5         Sydney\n6    6 Rio de Janeiro\n\n\nBuild a tibble in a for loop:\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.2.3\n\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nWarning: package 'tibble' was built under R version 4.2.3\n\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\n\nWarning: package 'readr' was built under R version 4.2.3\n\n\nWarning: package 'purrr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'forcats' was built under R version 4.2.3\n\n\nWarning: package 'lubridate' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Define an empty tibble\ntib &lt;- tibble(col1 = numeric(), col2 = character())\n\nfor(i in seq_along(cities)) {\n    new_row &lt;- tibble(col1 &lt;- i, col2 &lt;- cities[i])\n    tib &lt;- rbind(tib, new_row)\n}\ntib\n\n# A tibble: 6 × 2\n  `col1 &lt;- i` `col2 &lt;- cities[i]`\n        &lt;int&gt; &lt;chr&gt;              \n1           1 NY                 \n2           2 London             \n3           3 Cape Town          \n4           4 Beijing            \n5           5 Sydney             \n6           6 Rio de Janeiro"
  },
  {
    "objectID": "basics/loops.html#building-dataframes-and-tibbles-in-a-for-loop",
    "href": "basics/loops.html#building-dataframes-and-tibbles-in-a-for-loop",
    "title": "Loops",
    "section": "",
    "text": "Build a dataframe in a for loop:\n\n# Define an empty df\ndf &lt;- data.frame(col1 = numeric(), col2 = character(), stringsAsFactors=FALSE)\n\nfor(i in seq_along(cities)) {\n    df[i, ] &lt;- c(i, cities[i])\n}\n\ndf\n\n  col1           col2\n1    1             NY\n2    2         London\n3    3      Cape Town\n4    4        Beijing\n5    5         Sydney\n6    6 Rio de Janeiro\n\n\nBuild a tibble in a for loop:\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.2.3\n\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nWarning: package 'tibble' was built under R version 4.2.3\n\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\n\nWarning: package 'readr' was built under R version 4.2.3\n\n\nWarning: package 'purrr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'forcats' was built under R version 4.2.3\n\n\nWarning: package 'lubridate' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Define an empty tibble\ntib &lt;- tibble(col1 = numeric(), col2 = character())\n\nfor(i in seq_along(cities)) {\n    new_row &lt;- tibble(col1 &lt;- i, col2 &lt;- cities[i])\n    tib &lt;- rbind(tib, new_row)\n}\ntib\n\n# A tibble: 6 × 2\n  `col1 &lt;- i` `col2 &lt;- cities[i]`\n        &lt;int&gt; &lt;chr&gt;              \n1           1 NY                 \n2           2 London             \n3           3 Cape Town          \n4           4 Beijing            \n5           5 Sydney             \n6           6 Rio de Janeiro"
  }
]